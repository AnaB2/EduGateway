{"ast":null,"code":"const API_URL = 'http://localhost:4321'; // Replace this with your actual backend URL\n\nexport const signUpUser = async userData => {\n  try {\n    const response = await fetch(`${API_URL}/sign-up-user`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Failed to signup:\", error);\n    throw error;\n  }\n};\nexport const signUpInstitution = async institutionData => {\n  try {\n    const response = await fetch(`${API_URL}/sign-up-institution`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(institutionData)\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Failed to signup:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","signUpUser","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console","signUpInstitution","institutionData"],"sources":["C:/Users/marpr/proyects/EduGateway/src/main/js/front-edu-gateway/src/services/register.js"],"sourcesContent":["const API_URL = 'http://localhost:4321'; // Replace this with your actual backend URL\r\n\r\nexport const signUpUser = async (userData) => {\r\n    try {\r\n        const response = await fetch(`${API_URL}/sign-up-user`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(userData),\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error(\"Failed to signup:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const signUpInstitution = async (institutionData) => {\r\n    try {\r\n        const response = await fetch(`${API_URL}/sign-up-institution`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(institutionData),\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error(\"Failed to signup:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,eAAe,EAAE;MACpDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IACjC,CAAC,CAAC;IACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAOC,eAAe,IAAK;EACxD,IAAI;IACA,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,sBAAsB,EAAE;MAC3DK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACO,eAAe;IACxC,CAAC,CAAC;IACF,IAAI,CAACb,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}