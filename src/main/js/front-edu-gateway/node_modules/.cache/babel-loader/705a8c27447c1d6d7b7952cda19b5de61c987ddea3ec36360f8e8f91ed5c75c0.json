{"ast":null,"code":"import { getEmail, getToken } from \"./storage\";\nconst API_URL = 'http://localhost:4321'; // Replace this with your actual backend URL\n\n// const addAuthorizationHeader = (options) => {\n//     const token = getToken();\n//     const email = getEmail(); // Obtener el email del almacenamiento local\n//\n//     console.log(\"Token obtenido:\", token);\n//     console.log(\"Email obtenido:\", email);\n//\n//     // Verificar si hay un token disponible\n//     if (token) {\n//         // Si existe un token, agregar el encabezado de autorización a las opciones de la solicitud\n//         if (!options.headers) {\n//             options.headers = {};\n//         }\n//         options.headers.Authorization = `${token}`;\n//         options.headers.Email = email;\n//\n//     } else {\n//         // Si no hay un token disponible, lanzar un error\n//         throw new Error('Token de sesión no encontrado.');\n//     }\n//\n//     console.log(\"Encabezado de autorización agregado:\", options.headers.Authorization);\n//\n//     return options;\n// };\n\nexport const addOpportunity = async opportunityData => {\n  try {\n    const headers = createHeaders();\n    headers.Authorization = `${token}`;\n    headers.Email = email;\n    const response = await fetch(`${API_URL}/add-opportunity`, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(opportunityData)\n    });\n    console.log(\"Datos de la oportunidad:\", opportunityData);\n    if (response.status === 401) {\n      throw new Error('Unauthorized access');\n    }\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Failed to add opportunity:\", error);\n    throw error;\n  }\n};\nexport const deleteOpportunity = async name => {\n  try {\n    const headers = createHeaders();\n    const response = await fetch(`${API_URL}/delete-opportunity`, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        name: name\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Failed to delete opportunity:\", error);\n    throw error;\n  }\n};\nexport const modifyOpportunity = async (opportunityData, previousName) => {\n  try {\n    const headers = createHeaders();\n    opportunityData.previousName = previousName;\n    const response = await fetch(`${API_URL}/edit-opportunity`, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(opportunityData) // convierte objeto opportunityData en JSON\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json(); // devuelve objeto\n  } catch (error) {\n    console.error(\"Failed to modify opportunity:\", error);\n    throw error;\n  }\n};\nexport async function getOpportunitiesByInstitution() {\n  try {\n    const headers = createHeaders();\n    const queryParams = new URLSearchParams({\n      email: email\n    }).toString();\n    const response = await fetch(`${API_URL}/get-opportunities-institution?${queryParams}`, {\n      method: 'GET',\n      headers: headers\n    });\n    if (response.status === 401) {\n      throw new Error('Unauthorized access');\n    }\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json(); // devuelve objeto\n  } catch (error) {\n    console.error(\"Failed to get opportunities by institution:\", error);\n    throw error;\n  }\n}\nexport async function getOpportunities() {\n  try {\n    const headers = createHeaders();\n    const response = await fetch(`${API_URL}/get-opportunities`, {\n      method: 'GET',\n      headers: headers\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json(); // devuelve objeto\n  } catch (error) {\n    console.error(\"Failed to get opportunities:\", error);\n    throw error;\n  }\n}\nexport async function addInscription(email, opportunityId, formData) {\n  try {\n    const headers = createHeaders();\n    const response = await fetch(`${API_URL}/add-inscription`, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(formData)\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Failed to add inscription:', error);\n    throw error;\n  }\n}\nexport async function getInscriptions() {\n  try {\n    const headers = createHeaders();\n    const response = await fetch(`${API_URL}/get-inscriptions`, {\n      method: 'GET',\n      headers: headers\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json(); // devuelve objeto\n  } catch (error) {\n    console.error(\"Failed to get inscriptions:\", error);\n    throw error;\n  }\n}\nexport async function approveInscription(emailParticipante) {\n  try {\n    const body = JSON.stringify({\n      emailParticipante\n    });\n    const headers = createHeaders();\n    const response = await fetch(`${API_URL}/approve-inscription`, {\n      method: 'POST',\n      headers: headers,\n      body: body\n    });\n  } catch (error) {\n    console.error(\"Failed to approve inscription:\", error);\n    throw error;\n  }\n}\nexport async function rejectInscription(emailParticipante) {\n  try {\n    const body = JSON.stringify({\n      emailParticipante\n    });\n    const headers = createHeaders();\n    const response = await fetch(`${API_URL}/reject-inscription`, {\n      method: 'POST',\n      headers: headers,\n      body: body\n    });\n  } catch (error) {\n    console.error(\"Failed to reject inscription:\", error);\n    throw error;\n  }\n}\nexport async function followInstitution(userEmail, institutionEmail) {\n  try {\n    const headers = createHeaders();\n    const response = await fetch(`${API_URL}/follow-institution`, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        UserEmail: userEmail,\n        institutionEmail: institutionEmail\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json(); // devuelve objeto\n  } catch (error) {\n    console.error(\"Failed to follow institution:\", error);\n    throw error;\n  }\n}\nexport async function isFollowingInstitution(userEmail, institutionEmail) {\n  /*try {\r\n      const headers = createHeaders();\r\n        const response = await fetch(`${API_URL}/is-following-institution`, {\r\n          method: 'POST',\r\n          headers: headers,\r\n          body: JSON.stringify({ UserEmail: userEmail, institutionEmail: institutionEmail})\r\n      });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n      }\r\n        return await response.json(); // devuelve objeto\r\n    } catch (error) {\r\n      console.error(\"Failed to check if user is following institution:\", error);\r\n      throw error;\r\n  }*/\n  return true;\n}\n\n// función reutilizable\n\nfunction createHeaders() {\n  const token = getToken();\n  const email = getEmail();\n  if (!token || !email) {\n    throw new Error('Token o correo no encontrados.');\n  }\n  return {\n    'Content-Type': 'application/json',\n    'Email': email,\n    'Token': token\n  };\n}","map":{"version":3,"names":["getEmail","getToken","API_URL","addOpportunity","opportunityData","headers","createHeaders","Authorization","token","Email","email","response","fetch","method","body","JSON","stringify","console","log","status","Error","ok","json","error","deleteOpportunity","name","modifyOpportunity","previousName","getOpportunitiesByInstitution","queryParams","URLSearchParams","toString","getOpportunities","addInscription","opportunityId","formData","getInscriptions","approveInscription","emailParticipante","rejectInscription","followInstitution","userEmail","institutionEmail","UserEmail","isFollowingInstitution"],"sources":["C:/Users/marpr/proyects/EduGateway/src/main/js/front-edu-gateway/src/services/Api.js"],"sourcesContent":["import {getEmail, getToken} from \"./storage\";\r\n\r\nconst API_URL = 'http://localhost:4321'; // Replace this with your actual backend URL\r\n\r\n\r\n// const addAuthorizationHeader = (options) => {\r\n//     const token = getToken();\r\n//     const email = getEmail(); // Obtener el email del almacenamiento local\r\n//\r\n//     console.log(\"Token obtenido:\", token);\r\n//     console.log(\"Email obtenido:\", email);\r\n//\r\n//     // Verificar si hay un token disponible\r\n//     if (token) {\r\n//         // Si existe un token, agregar el encabezado de autorización a las opciones de la solicitud\r\n//         if (!options.headers) {\r\n//             options.headers = {};\r\n//         }\r\n//         options.headers.Authorization = `${token}`;\r\n//         options.headers.Email = email;\r\n//\r\n//     } else {\r\n//         // Si no hay un token disponible, lanzar un error\r\n//         throw new Error('Token de sesión no encontrado.');\r\n//     }\r\n//\r\n//     console.log(\"Encabezado de autorización agregado:\", options.headers.Authorization);\r\n//\r\n//     return options;\r\n// };\r\n\r\nexport const addOpportunity = async (opportunityData) => {\r\n    try {\r\n        const headers = createHeaders();\r\n\r\n        headers.Authorization = `${token}`;\r\n        headers.Email = email;\r\n\r\n        const response = await fetch(`${API_URL}/add-opportunity`, {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify(opportunityData)\r\n        });\r\n\r\n        console.log(\"Datos de la oportunidad:\", opportunityData);\r\n\r\n        if (response.status === 401) {\r\n            throw new Error('Unauthorized access');\r\n        }\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error(\"Failed to add opportunity:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteOpportunity = async (name) => {\r\n    try {\r\n        const headers = createHeaders();\r\n\r\n        const response = await fetch(`${API_URL}/delete-opportunity`, {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify({ name: name}),\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error(\"Failed to delete opportunity:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const modifyOpportunity = async (opportunityData, previousName) => {\r\n    try {\r\n        const headers = createHeaders();\r\n        opportunityData.previousName = previousName;\r\n        const response = await fetch(`${API_URL}/edit-opportunity`, {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify(opportunityData), // convierte objeto opportunityData en JSON\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return await response.json(); // devuelve objeto\r\n    } catch (error) {\r\n        console.error(\"Failed to modify opportunity:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport async function getOpportunitiesByInstitution() {\r\n    try {\r\n        const headers = createHeaders();\r\n\r\n        const queryParams = new URLSearchParams({ email: email }).toString();\r\n\r\n        const response = await fetch(`${API_URL}/get-opportunities-institution?${queryParams}`, {\r\n            method: 'GET',\r\n            headers: headers,\r\n        });\r\n\r\n        if (response.status === 401) {\r\n            throw new Error('Unauthorized access');\r\n        }\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        return await response.json(); // devuelve objeto\r\n\r\n    } catch (error) {\r\n        console.error(\"Failed to get opportunities by institution:\", error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getOpportunities() {\r\n    try {\r\n        const headers = createHeaders();\r\n\r\n        const response = await fetch(`${API_URL}/get-opportunities`, {\r\n            method: 'GET',\r\n            headers: headers,\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        return await response.json(); // devuelve objeto\r\n\r\n    } catch (error) {\r\n        console.error(\"Failed to get opportunities:\", error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function addInscription(email, opportunityId, formData){\r\n    try {\r\n        const headers = createHeaders();\r\n\r\n        const response = await fetch(`${API_URL}/add-inscription`, {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify(formData)\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        return await response.json();\r\n\r\n    } catch (error) {\r\n        console.error('Failed to add inscription:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getInscriptions() {\r\n    try {\r\n        const headers = createHeaders();\r\n\r\n        const response = await fetch(`${API_URL}/get-inscriptions`, {\r\n            method: 'GET',\r\n            headers: headers\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        return await response.json(); // devuelve objeto\r\n\r\n    } catch (error) {\r\n        console.error(\"Failed to get inscriptions:\", error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function approveInscription(emailParticipante){\r\n    try {\r\n        const body = JSON.stringify({ emailParticipante });\r\n        const headers = createHeaders();\r\n\r\n        const response = await fetch(`${API_URL}/approve-inscription`, {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: body\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Failed to approve inscription:\", error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function rejectInscription(emailParticipante){\r\n\r\n    try {\r\n        const body = JSON.stringify({ emailParticipante });\r\n        const headers = createHeaders();\r\n\r\n        const response = await fetch(`${API_URL}/reject-inscription`, {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: body\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error(\"Failed to reject inscription:\", error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function followInstitution(userEmail, institutionEmail){\r\n    try {\r\n        const headers = createHeaders();\r\n\r\n        const response = await fetch(`${API_URL}/follow-institution`, {\r\n                method: 'POST',\r\n                headers: headers,\r\n                body: JSON.stringify({ UserEmail: userEmail, institutionEmail: institutionEmail})\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            return await response.json(); // devuelve objeto\r\n\r\n        } catch (error) {\r\n            console.error(\"Failed to follow institution:\", error);\r\n            throw error;\r\n        }\r\n}\r\n\r\nexport async function isFollowingInstitution(userEmail, institutionEmail){\r\n    /*try {\r\n        const headers = createHeaders();\r\n\r\n        const response = await fetch(`${API_URL}/is-following-institution`, {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify({ UserEmail: userEmail, institutionEmail: institutionEmail})\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        return await response.json(); // devuelve objeto\r\n\r\n    } catch (error) {\r\n        console.error(\"Failed to check if user is following institution:\", error);\r\n        throw error;\r\n    }*/\r\n        return true;\r\n}\r\n\r\n\r\n\r\n// función reutilizable\r\n\r\nfunction createHeaders(){\r\n    const token = getToken();\r\n    const email = getEmail();\r\n    if (!token || !email) {throw new Error('Token o correo no encontrados.');}\r\n\r\n     return  {\r\n        'Content-Type': 'application/json',\r\n        'Email' : email,\r\n        'Token' : token\r\n    };\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}